# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: jaeger-agent
#   namespace: jaeger-namespace
# spec:
#   replicas: 1
#   selector:
#     matchLabels:
#       app: jaeger-agent
#   template:
#     metadata:
#       labels:
#         app: jaeger-agent
#     spec:
#       containers:
#       - name: jaeger-agent
#         image: jaegertracing/jaeger-agent:1.40
#         ports:
#         - containerPort: 5775
#         - containerPort: 6831
#         - containerPort: 5778
#         args: [
#           "start",
#           "--collector.endpoint=http://jaeger-collector:14268/api/traces"
#         ]
# Source: jaeger/templates/agent-sa.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: jaeger-agent
  labels:
    helm.sh/chart: jaeger-3.3.1
    app.kubernetes.io/name: jaeger
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.53.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: agent
automountServiceAccountToken: false
---
# Source: jaeger/templates/agent-svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: jaeger-agent
  labels:
    helm.sh/chart: jaeger-3.3.1
    app.kubernetes.io/name: jaeger
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.53.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: agent
spec:
  ports:
  - name: zipkin-compact
    port: 5775
    protocol: UDP
    targetPort: zipkin-compact
  - name: jaeger-compact
    port: 6831
    protocol: UDP
    targetPort: jaeger-compact
  - name: jaeger-binary
    port: 6832
    protocol: UDP
    targetPort: jaeger-binary
  - name: http
    port: 5778
    protocol: TCP
    targetPort: http
  - name: admin
    port: 14271
    protocol: TCP
    targetPort: admin
  type: ClusterIP
  selector:
    app.kubernetes.io/name: jaeger
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: agent
---
# Source: jaeger/templates/agent-ds.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: jaeger-agent
  labels:
    helm.sh/chart: jaeger-3.3.1
    app.kubernetes.io/name: jaeger
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.53.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: agent
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: jaeger
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: agent
  template:
    metadata:
      labels:
        app.kubernetes.io/name: jaeger
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/component: agent
    spec:
      securityContext:
        {}
      dnsPolicy: ClusterFirst
      serviceAccountName: release-name-jaeger-agent
      
      containers:
      - name: release-name-jaeger-agent
        securityContext:
          {}
        image: jaegertracing/jaeger-agent:1.53.0
        imagePullPolicy: IfNotPresent
        args:
          
          
        env:
          - name: REPORTER_GRPC_HOST_PORT
            value: jaeger-collector:14250
          - name: LOGLEVEL
            value: debug
        ports:
        - name: zipkin-compact
          containerPort: 5775
          protocol: UDP
        - name: jaeger-compact
          containerPort: 6831
          protocol: UDP
        - name: jaeger-binary
          containerPort: 6832
          protocol: UDP
        - name: http
          containerPort: 5778
          protocol: TCP
        - name: admin
          containerPort: 14271
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /
            port: admin
        readinessProbe:
          httpGet:
            path: /
            port: admin
        resources:
          {}
        volumeMounts:
      volumes:
---
